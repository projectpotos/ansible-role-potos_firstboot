---
- name: Prepare setup directory
  ansible.builtin.file:
    path: '/setup'
    state: directory
    recurse: yes

- name: Pre commands
  ansible.builtin.shell:
    cmd: '{{ item }}'
  loop: '{{ potos_firstboot_precommands }}'
  when:
    - potos_firstboot_precommands is defined
    - potos_firstboot_precommands is iterable
    - potos_firstboot_precommands is not string
    - potos_firstboot_precommands is not mapping

- name: Install yad
  ansible.builtin.package:
    name: 'yad'

- name: Yad test
  ansible.builtin.shell:
    executable: '/bin/bash'
    cmd: yad --text 'Demo YAD Window that must open during installation'  --button=gtk-close

- name: Ask hostname
  ansible.builtin.shell:
    executable: '/bin/bash'
    cmd: |
      while [[ -z ${POTOS_HOSTNAME} ]]; do
        USERINPUT="$(yad --fullscreen --title '${POTOS_CLIENT_NAME} Hostname' \
        --borders 20 --align center \
        --button gtk-ok \
        --image-on-top --image=/potos-setup/potos.png \
        --text \
      "Please enter your hostname below
      " \
        --form \
        --field 'Hostname' \
      )"

      POTOS_HOSTNAME="$(echo ${USERINPUT} | cut -d '|' -f 1)"

      if [[ -z ${POTOS_HOSTNAME} ]]; then
        yad --title "${POTOS_CLIENT_NAME} HOSTNAME" \
          --borders 20 --align center --button gtk-ok --image-on-top \
          --image=/potos-setup/potos.png \
          --text 'Please choose the hostname.'
      fi
      done
      echo $POTOS_HOSTNAME
  register: potos_firstboot_hostname_dialog
  when: potos_firstboot_ask_hostname == True

- name: Set hostname from dialog as an ansible fact
  ansible.builtin.set_fact:
    potos_firstboot_hostname: '{{ potos_firstboot_hostname_dialog.stdout }}'
  when: potos_firstboot_hostname is undefined and potos_firstboot_ask_hostname == True

- name: Set hostname
  ansible.builtin.hostname:
    name: '{{ potos_firstboot_hostname }}'
  when: potos_firstboot_hostname is defined and potos_firstboot_ask_hostname == True

- name: Get the hostname from iso environment var
  shell: echo "$POTOS_INITIAL_HOSTNAME"
  register: potos_firstboot_iso_env_hostname

- name: Set old hostname defined from iso as an ansible fact
  ansible.builtin.set_fact:
    potos_firstboot_iso_hostname: '{{ potos_firstboot_iso_env_hostname.stdout }}'
  when: potos_firstboot_iso_env_hostname is defined and potos_firstboot_ask_hostname == True

- name: Adjust hosts file
  ansible.builtin.replace:
    path: '/etc/hosts'
    regexp: '{{ potos_firstboot_iso_hostname }}'
    replace: '{{ potos_firstboot_hostname }}'
  when: potos_firstboot_hostname is defined and potos_firstboot_iso_env_hostname is defined and potos_firstboot_ask_hostname == True
