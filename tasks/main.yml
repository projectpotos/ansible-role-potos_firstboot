---
- name: Prepare setup directory
  ansible.builtin.file:
    path: '/setup'
    state: directory
    recurse: yes

- name: Pre commands
  ansible.builtin.shell:
    cmd: '{{ item }}'
  loop: '{{ potos_firstboot_precommands }}'
  when:
    - potos_firstboot_precommands is defined
    - potos_firstboot_precommands is iterable
    - potos_firstboot_precommands is not string
    - potos_firstboot_precommands is not mapping

- name: Install yad
  ansible.builtin.package:
    name: 'yad'

- name: Yad test
  ansible.builtin.shell:
    executable: '/bin/bash'
    cmd: yad --text 'Demo YAD Window that must open during installation'  --button=gtk-close

- name: Save old hostname
  ansible.builtin.command:
    cmd: hostname
  register: potos_firstboot_old_hostname

- name: Ask hostname
  ansible.builtin.shell:
    executable: '/bin/bash'
    cmd: |
      while [[ -z ${POTOS_HOSTNAME} ]]; do
        USERINPUT="$(yad --fullscreen --title '${POTOS_CLIENT_NAME} Hostname' \
        --borders 20 --align center \
        --button gtk-ok \
        --image-on-top --image=/setup/potos.png \
        --text \
      "Please enter your hostname below
      " \
        --form \
        --field 'Hostname' \
      )"

      POTOS_HOSTNAME="$(echo ${USERINPUT} | cut -d '|' -f 1)"

      if [[ -z ${POTOS_HOSTNAME} ]]; then
        yad --title "${POTOS_CLIENT_NAME} HOSTNAME" \
          --borders 20 --align center --button gtk-ok --image-on-top \
          --image=/potos-setup/potos.png \
          --text 'Please choose the hostname.'
      fi
      done
      echo $POTOS_HOSTNAME
  register: potos_firstboot_hostname_dialog
  when: potos_firstboot_ask_hostname == True

- name: Set hostname from dialog as an ansible fact
  ansible.builtin.set_fact:
    potos_firstboot_hostname: '{{ potos_firstboot_hostname_dialog.stdout }}'
  when: potos_firstboot_hostname is undefined and potos_firstboot_ask_hostname == True

- name: Set hostname
  ansible.builtin.hostname:
    name: '{{ potos_firstboot_hostname }}'
  when: potos_firstboot_hostname is defined and potos_firstboot_ask_hostname == True

- name: Adjust hosts file
  ansible.builtin.replace:
    path: '/etc/hosts'
    regexp: '{{ potos_firstboot_old_hostname.stdout }}'
    replace: '{{ potos_firstboot_hostname }}'
  when:
    - potos_firstboot_hostname is defined
    - potos_firstboot_old_hostname.stdout != ''
    - potos_firstboot_ask_hostname == True

- name: Ask new user
  ansible.builtin.shell:
    executable: '/bin/bash'
    cmd: |
      while [[ -z ${POTOS_NEW_USER} || -z ${POTOS_NEW_PASS} || -z ${POTOS_NEW_PASS2} ]]; do
        USERINPUT="$(yad --fullscreen --title '${POTOS_CLIENT_NAME} Setup' \
          --borders 20 --align center \
          --button gtk-ok --button "Change keyboard layout":"/setup/change-keyboard-layout" \
          --image-on-top --image=/setup/potos.png \
          --text \
      "IMPORTANT: If your password contains special characters, please remember to select the appropriate keyboard layout first.

      Please enter your new credentials below
      " \
          --form \
          --field 'Username' \
          --field 'Password:H' \
          --field 'Confirm password:H'
        )"

        POTOS_NEW_USER="$(echo ${USERINPUT} | cut -d '|' -f 1)"
        POTOS_NEW_PASS="$(echo ${USERINPUT} | cut -d '|' -f 2)"
        POTOS_NEW_PASS2="$(echo ${USERINPUT} | cut -d '|' -f 3)"

        if [[ -z ${POTOS_NEW_USER} || -z ${POTOS_NEW_PASS} ]]; then
          yad --title "${POTOS_CLIENT_NAME} Setup" \
            --borders 20 --align center --button gtk-ok --image-on-top \
            --image=/setup/potos.png \
            --text 'Please choose and enter your new credentials.'
        fi
        if [[  ${POTOS_NEW_PASS} != ${POTOS_NEW_PASS2} ]]; then
          yad --title "${POTOS_CLIENT_NAME} Setup" \
            --borders 20 --align center --button gtk-ok --image-on-top \
            --image=/setup/potos.png \
            --text 'Your password was not identical. Please try again.'
        fi
      done
      echo $POTOS_NEW_USER
      echo $POTOS_NEW_PASS
  register: potos_new_user_password

- name: Add local user with sudo permission
  ansible.builtin.user:
    name: "{{ potos_new_user_password.stdout_lines[0] }}"
    password: "{{ potos_new_user_password.stdout_lines[1] | password_hash('sha512') }}"
    groups: sudo
    shell: "{{ potos_firstboot_local_user_add_shell }}"
  when: potos_firstboot_local_user_add_with_sudo == True

- name: Add local user without sudo permission
  ansible.builtin.user:
    name: "{{ potos_new_user_password.stdout_lines[0] }}"
    password: "{{ potos_new_user_password.stdout_lines[1] | password_hash('sha512') }}"
    shell: "{{ potos_firstboot_local_user_add_shell }}"
  when: potos_firstboot_local_user_add_without_sudo == True

- name: Print username from env
  ansible.builtin.shell: . /setup/.env && echo ${POTOS_INITIAL_USERNAME}
  register: potos_firstboot_initial_username
  when: potos_firstboot_initial_user_delete_admin_iso_user == True

- name: Delete initial local user from env
  ansible.builtin.user:
    name: "{{ potos_firstboot_initial_username.stdout }}"
    state: absent
  when: potos_firstboot_initial_user_delete_admin_iso_user == True
  

# was ok, no debug needed anymore. schroeffu 20221125 1606
#- name: tmp msg output
#  ansible.builtin.debug:
#    msg: pwdline wrong? register is {{ potos_new_user_password }} and lines {{ potos_new_user_password.stdout_lines }} and lines1 is {{ potos_new_user_password.stdout_lines[1] }} and hashed it is {{ potos_new_user_password.stdout_lines[1] | password_hash('sha512') }}
#  when: potos_new_user_password is defined

